"""
This type stub file was generated by pyright.
"""

import pandas as pd
from pandas.api.extensions import ExtensionDtype
from typing_extensions import TypeAlias
from pandas._typing import ArrayLike, Dtype, DtypeObj, npt

_ArrayOrDtype: TypeAlias = (ArrayLike | npt.DTypeLike | pd.Series | pd.DataFrame | pd.Index | ExtensionDtype)
def is_object_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_datetime64_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_timedelta64_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_dtype_equal(source: Dtype, target: Dtype) -> bool:
    ...

def is_string_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_integer_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_signed_integer_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_unsigned_integer_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_datetime64_any_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_datetime64_ns_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_timedelta64_ns_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_numeric_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_float_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_bool_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_extension_array_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_complex_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def is_any_real_numeric_dtype(arr_or_dtype: _ArrayOrDtype) -> bool:
    ...

def pandas_dtype(dtype: object) -> DtypeObj:
    ...

