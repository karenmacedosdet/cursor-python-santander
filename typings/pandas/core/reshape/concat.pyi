"""
This type stub file was generated by pyright.
"""

from collections.abc import Iterable, Mapping, Sequence
from typing import Literal, overload
from pandas import DataFrame, Series
from typing_extensions import Never
from pandas._typing import Axis, AxisIndex, HashableT1, HashableT2, HashableT3, HashableT4

@overload
def concat(objs: Iterable[DataFrame] | Mapping[HashableT1, DataFrame], *, axis: Axis = ..., join: Literal["inner", "outer"] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame:
    ...

@overload
def concat(objs: Iterable[Series] | Mapping[HashableT1, Series], *, axis: AxisIndex = ..., join: Literal["inner", "outer"] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> Series:
    ...

@overload
def concat(objs: Iterable[Series | DataFrame] | Mapping[HashableT1, Series | DataFrame], *, axis: Axis = ..., join: Literal["inner", "outer"] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame:
    ...

@overload
def concat(objs: Iterable[None] | Mapping[HashableT1, None], *, axis: Axis = ..., join: Literal["inner", "outer"] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> Never:
    ...

@overload
def concat(objs: Iterable[DataFrame | None] | Mapping[HashableT1, DataFrame | None], *, axis: Axis = ..., join: Literal["inner", "outer"] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame:
    ...

@overload
def concat(objs: Iterable[Series | None] | Mapping[HashableT1, Series | None], *, axis: AxisIndex = ..., join: Literal["inner", "outer"] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> Series:
    ...

@overload
def concat(objs: (Iterable[Series | DataFrame | None] | Mapping[HashableT1, Series | DataFrame | None]), *, axis: Axis = ..., join: Literal["inner", "outer"] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame:
    ...

