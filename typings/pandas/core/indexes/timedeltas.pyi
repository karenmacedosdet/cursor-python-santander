"""
This type stub file was generated by pyright.
"""

import datetime as dt
import numpy as np
from collections.abc import Hashable, Sequence
from typing import Literal, overload
from pandas import DateOffset, Index, Period
from pandas.core.indexes.accessors import TimedeltaIndexProperties
from pandas.core.indexes.datetimelike import DatetimeTimedeltaMixin
from pandas.core.indexes.datetimes import DatetimeIndex
from pandas.core.indexes.period import PeriodIndex
from pandas.core.series import TimedeltaSeries
from typing_extensions import Self
from pandas._libs import Timedelta, Timestamp
from pandas._libs.tslibs import BaseOffset
from pandas._typing import AxesData, TimedeltaConvertibleTypes, num

class TimedeltaIndex(DatetimeTimedeltaMixin[Timedelta], TimedeltaIndexProperties):
    def __new__(cls, data: (Sequence[dt.timedelta | Timedelta | np.timedelta64 | float] | AxesData) = ..., freq: str | BaseOffset = ..., closed: object = ..., dtype: Literal["<m8[ns]"] = ..., copy: bool = ..., name: str = ...) -> Self:
        ...
    
    @overload
    def __add__(self, other: Period) -> PeriodIndex:
        ...
    
    @overload
    def __add__(self, other: DatetimeIndex) -> DatetimeIndex:
        ...
    
    @overload
    def __add__(self, other: dt.timedelta | Timedelta | Self) -> Self:
        ...
    
    def __radd__(self, other: dt.datetime | Timestamp | DatetimeIndex) -> DatetimeIndex:
        ...
    
    def __sub__(self, other: dt.timedelta | Timedelta | Self) -> Self:
        ...
    
    def __mul__(self, other: num) -> Self:
        ...
    
    @overload
    def __truediv__(self, other: num | Sequence[float]) -> Self:
        ...
    
    @overload
    def __truediv__(self, other: dt.timedelta | Sequence[dt.timedelta]) -> Index[float]:
        ...
    
    def __rtruediv__(self, other: dt.timedelta | Sequence[dt.timedelta]) -> Index[float]:
        ...
    
    @overload
    def __floordiv__(self, other: num | Sequence[float]) -> Self:
        ...
    
    @overload
    def __floordiv__(self, other: dt.timedelta | Sequence[dt.timedelta]) -> Index[int]:
        ...
    
    def __rfloordiv__(self, other: dt.timedelta | Sequence[dt.timedelta]) -> Index[int]:
        ...
    
    def astype(self, dtype, copy: bool = ...):
        ...
    
    def searchsorted(self, value, side: str = ..., sorter=...):
        ...
    
    @property
    def inferred_type(self) -> str:
        ...
    
    def to_series(self, index=..., name: Hashable = ...) -> TimedeltaSeries:
        ...
    
    def shift(self, periods: int = ..., freq=...) -> Self:
        ...
    


def timedelta_range(start: TimedeltaConvertibleTypes = ..., end: TimedeltaConvertibleTypes = ..., periods: int | None = ..., freq: str | DateOffset | Timedelta | dt.timedelta | None = ..., name: Hashable | None = ..., closed: Literal["left", "right"] | None = ...) -> TimedeltaIndex:
    ...

